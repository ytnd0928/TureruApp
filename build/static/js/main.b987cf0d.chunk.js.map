{"version":3,"sources":["App.module.css","features/core/Core.module.css","features/post/Post.module.css","features/post/postSlice.ts","features/auth/authSlice.ts","features/core/images/tureruapplogo2.png","features/auth/Auth.tsx","features/core/Search.tsx","features/post/Post.tsx","features/core/EditProfile.tsx","features/core/NewPost.tsx","features/core/images/turerufav.png","features/core/Core.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/auth/Auth.module.css"],"names":["module","exports","apiUrlPost","process","apiUrlComment","fetchAsyncGetPosts","createAsyncThunk","a","axios","get","headers","Authorization","localStorage","localJWT","res","data","fetchAsyncNewPost","newPost","uploadData","FormData","append","title","img","name","post","fetchAsyncPatchLiked","liked","currentLiked","current","isOverlapped","forEach","new","String","length","put","id","patch","fetchAsyncGetComments","fetchAsyncPostComment","comment","postSlice","createSlice","initialState","isLoadingPost","openNewPost","posts","userPost","created_on","comments","text","userComment","reducers","fetchPostStart","state","fetchPostEnd","setOpenNewPost","resetOpenNewPost","extraReducers","builder","addCase","fulfilled","action","payload","map","actions","selectIsLoadingPost","selectOpenNewPost","selectPosts","selectComments","apiUrl","fetchAsyncLogin","authen","fetchAsyncRegister","auth","fetchAsyncCreateProf","nickName","fetchAsyncUpdateProf","profile","fetchAsyncGetMyProf","fetchAsyncGetProfs","authSlice","openSignIn","openSignUp","openProfile","openSearch","isLoadingAuth","myprofile","userProfile","profiles","titles","fetchCredStart","fetchCredEnd","setOpenSignIn","resetOpenSignIn","setOpenSignUp","resetOpenSignUp","setOpenProfile","resetOpenProfile","editNickname","setItem","access","prof","selectIsLoadingAuth","selectOpenSignIn","selectOpenSignUp","selectOpenProfile","selectProfile","selectProfiles","customStyles","overlay","backgroundColor","content","top","left","width","height","padding","transform","Auth","Modal","setAppElement","useSelector","dispatch","useDispatch","isOpen","onRequestClose","style","initialErrors","email","initialValues","password","onSubmit","values","resultReg","match","validationSchema","object","shape","string","required","min","handleSubmit","handleChange","handleBlur","errors","touched","isValid","className","styles","auth_signUp","auth_title","src","logo","marginLeft","marginTop","auth_progress","CircularProgress","TextField","placeholder","type","onChange","onBlur","value","auth_error","Button","variant","color","disabled","auth_text","onClick","result","postTitles","ListItems","props","ListItem","alignItems","divider","ListItemText","primary","SearchTextField","useState","keyword","setKeyword","showLists","setShowLists","filteredpostTitles","setFilteredpostTitles","useEffect","searchKeywords","trim","toLowerCase","filter","postTitle","every","kw","indexOf","label","e","target","v","i","useStyles","makeStyles","theme","small","spacing","marginRight","Post","postId","loginId","imageUrl","classes","setText","commentsOnPost","com","postComment","preventDefault","packet","handlerLiked","post_header","Avatar","post_avatar","post_image","alt","post_text","Checkbox","post_checkBox","icon","FavoriteBorder","checkedIcon","Favorite","checked","some","like","AvatarGroup","max","post_avatarGroup","find","Divider","post_comments","post_comment","post_strong","post_commentBox","post_input","post_button","EditProfile","image","setImage","updateProfile","core_modal","core_signUp","core_title","hidden","files","IconButton","fileInput","document","getElementById","click","NewPost","setTitle","StyledBadge","withStyles","badge","boxShadow","palette","background","paper","position","borderRadius","animation","border","opacity","Badge","Core","fetchBootLoader","rejected","core_content","core_header","fav","marginBottom","fontSize","core_btnModal","core_logout","removeItem","fontWeight","overlap","anchorOrigin","vertical","horizontal","textAlign","Search","core_posts","Grid","container","slice","reverse","item","xs","md","App","app","store","configureStore","reducer","authReducer","postReducer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b987cf0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"core_content\":\"Core_core_content__2AOQQ\",\"core_title\":\"Core_core_title__3Fgeq\",\"core_signUp\":\"Core_core_signUp__3AQKY\",\"core_text\":\"Core_core_text__1p9Cy\",\"core_header\":\"Core_core_header__2o3ti\",\"core_btnModal\":\"Core_core_btnModal__3Z0dS\",\"core_logout\":\"Core_core_logout__3tLwx\",\"core_posts\":\"Core_core_posts__2xCPu\",\"core_progress\":\"Core_core_progress__29G_y\",\"core_modal\":\"Core_core_modal__1hou8\",\"core_postModal\":\"Core_core_postModal__xRwkY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1-uEC\",\"post_header\":\"Post_post_header__38Oy0\",\"post_avatar\":\"Post_post_avatar__334I0\",\"post_image\":\"Post_post_image__x9cFE\",\"post_text\":\"Post_post_text__cA3ML\",\"post_checkBox\":\"Post_post_checkBox__z3Pg8\",\"post_avatarGroup\":\"Post_post_avatarGroup__3w2Uj\",\"post_comments\":\"Post_post_comments__LRl-T\",\"post_comment\":\"Post_post_comment__1f1Ef\",\"post_commentBox\":\"Post_post_commentBox__1Gykt\",\"post_input\":\"Post_post_input__1EAqP\",\"post_button\":\"Post_post_button__3Zy9l\",\"post_strong\":\"Post_post_strong__SBUVA\"};","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport axios from \"axios\";\nimport { PROPS_NEWPOST, PROPS_LIKED, PROPS_COMMENT } from \"../types\";\n\nconst apiUrlPost = `${process.env.REACT_APP_DEV_API_URL}api/post/`;\nconst apiUrlComment = `${process.env.REACT_APP_DEV_API_URL}api/comment/`;\n\nexport const fetchAsyncGetPosts = createAsyncThunk(\"post/get\", async () => {\n  const res = await axios.get(apiUrlPost, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  });\n  return res.data;\n});\n\n//新規で投稿を作成する関数\nexport const fetchAsyncNewPost = createAsyncThunk(\n  \"post/post\",\n  async (newPost: PROPS_NEWPOST) => {\n    const uploadData = new FormData();\n    uploadData.append(\"title\", newPost.title);\n    //uploadData.append(\"place\", newPost.place);\n    newPost.img && uploadData.append(\"img\", newPost.img, newPost.img.name);\n    const res = await axios.post(apiUrlPost, uploadData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncPatchLiked = createAsyncThunk(\n  \"post/patch\",\n  async (liked: PROPS_LIKED) => {\n    const currentLiked = liked.current;\n    const uploadData = new FormData();\n\n    let isOverlapped = false;\n    currentLiked.forEach((current) => {\n      if (current === liked.new) {\n        isOverlapped = true;\n      } else {\n        uploadData.append(\"liked\", String(current));\n      }\n    });\n\n    if (!isOverlapped) {\n      uploadData.append(\"liked\", String(liked.new));\n    } else if (currentLiked.length === 1) {\n      uploadData.append(\"title\", liked.title);\n      const res = await axios.put(`${apiUrlPost}${liked.id}/`, uploadData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      });\n      return res.data;\n    }\n    const res = await axios.patch(`${apiUrlPost}${liked.id}/`, uploadData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetComments = createAsyncThunk(\n  \"comment/get\",\n  async () => {\n    const res = await axios.get(apiUrlComment, {\n      headers: {\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncPostComment = createAsyncThunk(\n  \"comment/post\",\n  async (comment: PROPS_COMMENT) => {\n    const res = await axios.post(apiUrlComment, comment, {\n      headers: {\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    isLoadingPost: false,\n    openNewPost: false,\n    posts: [\n      {\n        id: 0,\n        title: \"\",\n        userPost: 0,\n        created_on: \"\",\n        img: \"\",\n        liked: [0],\n      },\n    ],\n    comments: [\n      {\n        id: 0,\n        text: \"\",\n        userComment: 0,\n        post: 0,\n      },\n    ],\n  },\n  reducers: {\n    fetchPostStart(state) {\n      state.isLoadingPost = true;\n    },\n    fetchPostEnd(state) {\n      state.isLoadingPost = false;\n    },\n    setOpenNewPost(state) {\n      state.openNewPost = true;\n    },\n    resetOpenNewPost(state) {\n      state.openNewPost = false;\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncGetPosts.fulfilled, (state, action) => {\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    });\n    builder.addCase(fetchAsyncNewPost.fulfilled, (state, action) => {\n      return {\n        ...state,\n        posts: [...state.posts, action.payload],\n      };\n    });\n    builder.addCase(fetchAsyncGetComments.fulfilled, (state, action) => {\n      return {\n        ...state,\n        comments: action.payload,\n      };\n    });\n    builder.addCase(fetchAsyncPostComment.fulfilled, (state, action) => {\n      return {\n        ...state,\n        comments: [...state.comments, action.payload],\n      };\n    });\n    builder.addCase(fetchAsyncPatchLiked.fulfilled, (state, action) => {\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post.id === action.payload.id ? action.payload : post\n        ),\n      };\n    });\n  },\n});\n\nexport const {\n  fetchPostStart,\n  fetchPostEnd,\n  setOpenNewPost,\n  resetOpenNewPost,\n} = postSlice.actions;\n\nexport const selectIsLoadingPost = (state: RootState) =>\n  state.post.isLoadingPost;\nexport const selectOpenNewPost = (state: RootState) => state.post.openNewPost;\nexport const selectPosts = (state: RootState) => state.post.posts;\nexport const selectComments = (state: RootState) => state.post.comments;\n\nexport default postSlice.reducer;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport axios from \"axios\";\nimport { PROPS_AUTHEN, PROPS_PROFILE, PROPS_NICKNAME } from \"../types\";\n\nconst apiUrl = process.env.REACT_APP_DEV_API_URL;\n\nexport const fetchAsyncLogin = createAsyncThunk(\n  \"auth/post\",\n  async (authen: PROPS_AUTHEN) => {\n    const res = await axios.post(`${apiUrl}authen/jwt/create`, authen, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncRegister = createAsyncThunk(\n  \"auth/register\",\n  async (auth: PROPS_AUTHEN) => {\n    const res = await axios.post(`${apiUrl}api/register/`, auth, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncCreateProf = createAsyncThunk(\n  \"profile/post\",\n  async (nickName: PROPS_NICKNAME) => {\n    const res = await axios.post(`${apiUrl}api/profile/`, nickName, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    });\n    return res.data;\n  }\n);\n\nexport const fetchAsyncUpdateProf = createAsyncThunk(\n  \"profile/put\",\n  async (profile: PROPS_PROFILE) => {\n    const uploadData = new FormData();\n    uploadData.append(\"nickName\", profile.nickName);\n    profile.img && uploadData.append(\"img\", profile.img, profile.img.name);\n    const res = await axios.put(\n      `${apiUrl}api/profile/${profile.id}/`,\n      uploadData,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncGetMyProf = createAsyncThunk(\"profile/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/myprofile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  });\n  return res.data[0];\n});\n\nexport const fetchAsyncGetProfs = createAsyncThunk(\"profiles/get\", async () => {\n  const res = await axios.get(`${apiUrl}api/profile/`, {\n    headers: {\n      Authorization: `JWT ${localStorage.localJWT}`,\n    },\n  });\n  return res.data;\n});\n\n\n//タイトルを取得\n//export const fetchAsyncGetTitles = createAsyncThunk(\"titles/get\", async () => {\n // const res = await axios.get(`${apiUrl}api/title/`, {\n  //  headers: {\n   //   Authorization: `JWT ${localStorage.localJWT}`,\n    //},\n // });\n // return res.data;\n//});\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    openSignIn: true,\n    openSignUp: false,\n    openProfile: false,\n    openSearch: false,\n    isLoadingAuth: false,\n    myprofile: {\n      id: 0,\n      nickName: \"\",\n      userProfile: 0,\n      created_on: \"\",\n      img: \"\",\n    },\n    profiles: [\n      {\n        id: 0,\n        nickName: \"\",\n        userProfile: 0,\n        created_on: \"\",\n        img: \"\",\n      },\n    ],\n    titles: [\n      {\n        id: 0,\n      },\n    ],\n  },\n  reducers: {\n    fetchCredStart(state) {\n      state.isLoadingAuth = true;\n    },\n    fetchCredEnd(state) {\n      state.isLoadingAuth = false;\n    },\n    setOpenSignIn(state) {\n      state.openSignIn = true;\n    },\n    resetOpenSignIn(state) {\n      state.openSignIn = false;\n    },\n    setOpenSignUp(state) {\n      state.openSignUp = true;\n    },\n    resetOpenSignUp(state) {\n      state.openSignUp = false;\n    },\n    setOpenProfile(state) {\n      state.openProfile = true;\n    },\n    resetOpenProfile(state) {\n      state.openProfile = false;\n    },\n    //setOpenSearch(state) {\n     // state.openProfile = true;\n    //},\n    //resetOpenSearch(state) {\n    //  state.openProfile = false;\n   // },\n    editNickname(state, action) {\n      state.myprofile.nickName = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAsyncLogin.fulfilled, (state, action) => {\n      localStorage.setItem(\"localJWT\", action.payload.access);\n    });\n    builder.addCase(fetchAsyncCreateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n    builder.addCase(fetchAsyncGetMyProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n    });\n    builder.addCase(fetchAsyncGetProfs.fulfilled, (state, action) => {\n      state.profiles = action.payload;\n    });\n    builder.addCase(fetchAsyncUpdateProf.fulfilled, (state, action) => {\n      state.myprofile = action.payload;\n      state.profiles = state.profiles.map((prof) =>\n        prof.id === action.payload.id ? action.payload : prof\n      );\n    });\n  },\n});\n\nexport const {\n  fetchCredStart,\n  fetchCredEnd,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  editNickname,\n  //setOpenSearch,\n  //resetOpenSearch\n} = authSlice.actions;\n\nexport const selectIsLoadingAuth = (state: RootState) =>\n  state.auth.isLoadingAuth;\nexport const selectOpenSignIn = (state: RootState) => state.auth.openSignIn;\nexport const selectOpenSignUp = (state: RootState) => state.auth.openSignUp;\nexport const selectOpenProfile = (state: RootState) => state.auth.openProfile;\nexport const selectProfile = (state: RootState) => state.auth.myprofile;\nexport const selectProfiles = (state: RootState) => state.auth.profiles;\n//export const selectOpenSearch = (state: RootState) => state.auth.titles;\n\n\nexport default authSlice.reducer;","export default __webpack_public_path__ + \"static/media/tureruapplogo2.8fd25403.png\";","import React from \"react\";\nimport { AppDispatch } from \"../../app/store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./Auth.module.css\";\nimport Modal from \"react-modal\";\nimport { Formik } from \"formik\";\nimport { object, string } from \"yup\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\n\nimport { fetchAsyncGetPosts, fetchAsyncGetComments } from \"../post/postSlice\";\n\nimport {\n  selectIsLoadingAuth,\n  selectOpenSignIn,\n  selectOpenSignUp,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  fetchCredStart,\n  fetchCredEnd,\n  fetchAsyncLogin,\n  fetchAsyncRegister,\n  fetchAsyncGetMyProf,\n  fetchAsyncGetProfs,\n  fetchAsyncCreateProf,\n //fetchAsdyncGetTitle\n} from \"./authSlice\";\n\nimport logo from \"../core/images/tureruapplogo2.png\";\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"#777777\",\n  },\n  content: {\n    top: \"55%\",\n    left: \"50%\",\n\n    width: 280,\n    height: 350,\n    padding: \"50px\",\n\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst Auth: React.FC = () => {\n  Modal.setAppElement(\"#root\");\n  const openSignIn = useSelector(selectOpenSignIn);\n  const openSignUp = useSelector(selectOpenSignUp);\n  const isLoadingAuth = useSelector(selectIsLoadingAuth);\n  const dispatch: AppDispatch = useDispatch();\n  //const openSearch = useSelector(selectOpenSearch);\n\n  return (\n    <>\n      <Modal\n        isOpen={openSignUp}\n        onRequestClose={async () => {\n          await dispatch(resetOpenSignUp());\n        }}\n        style={customStyles}\n      >\n        <Formik\n          initialErrors={{ email: \"required\" }}\n          initialValues={{ email: \"\", password: \"\" }}\n          onSubmit={async (values) => {\n\n    \n            await dispatch(fetchCredStart());\n            const resultReg = await dispatch(fetchAsyncRegister(values));\n\n            if (fetchAsyncRegister.fulfilled.match(resultReg)) {\n              await dispatch(fetchAsyncLogin(values));\n              await dispatch(fetchAsyncCreateProf({ nickName: \"anonymous\" }));\n\n              await dispatch(fetchAsyncGetProfs());\n              await dispatch(fetchAsyncGetPosts());\n              await dispatch(fetchAsyncGetComments());\n              await dispatch(fetchAsyncGetMyProf());\n            }\n          \n            await dispatch(fetchCredEnd());\n          \n            await dispatch(resetOpenSignUp());\n          }}\n          validationSchema={object().shape({\n            email: string()\n           \n              .email(\"email format is wrong\")\n              .required(\"email is must\"),\n             \n            password: string().required(\"password is must\").min(4),\n          })}\n        >\n         {({\n              \n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched,\n            isValid, \n          }) => (\n            <div>\n              <form onSubmit={handleSubmit}>\n                <div className={styles.auth_signUp}>\n                  <h1 className={styles.auth_title}>Tsureru App</h1>\n                  <br />\n                  <br />\n                  <img src={logo} style={{width: \"60px\", height: \"60px\", marginLeft: \"60px\", marginTop: \"2px\"}} />\n                  <div className={styles.auth_progress}>\n                    {isLoadingAuth && <CircularProgress />}\n                  </div>\n                  <br />\n\n                  <TextField\n                    placeholder=\"email\"\n                    type=\"input\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  />\n                  <br />\n                  {touched.email && errors.email ? (\n                    <div className={styles.auth_error}>{errors.email}</div>\n                  ) : null}\n\n                  <TextField\n                    placeholder=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                  />\n                  {touched.password && errors.password ? (\n                    <div className={styles.auth_error}>{errors.password}</div>\n                  ) : null}\n                  <br />\n                  <br />\n\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!isValid}\n                    type=\"submit\"\n                  >\n                    登録\n                  </Button>\n                  <br />\n                  <br />\n                  <span\n                    className={styles.auth_text}\n                    onClick={async () => {\n                      await dispatch(setOpenSignIn());\n                      await dispatch(resetOpenSignUp());\n                    }}\n                  >\n                    すでにアカウントをお持ちですか？\n                    </span>\n                </div>\n              </form>\n            </div>\n          )}\n        </Formik>\n      </Modal>\n      <Modal\n        isOpen={openSignIn}\n        onRequestClose={async () => {\n          await dispatch(resetOpenSignIn());\n        }}\n        style={customStyles}\n      >\n        <Formik\n          initialErrors={{ email: \"required\" }}\n          initialValues={{ email: \"\", password: \"\" }}\n          onSubmit={async (values) => {\n            await dispatch(fetchCredStart());\n            const result = await dispatch(fetchAsyncLogin(values));\n            if (fetchAsyncLogin.fulfilled.match(result)) {\n              await dispatch(fetchAsyncGetProfs());\n              await dispatch(fetchAsyncGetPosts());\n              await dispatch(fetchAsyncGetComments());\n              await dispatch(fetchAsyncGetMyProf());\n            }\n            await dispatch(fetchCredEnd());\n            await dispatch(resetOpenSignIn());\n          }}\n          validationSchema={object().shape({\n            email: string()\n              .email(\"email format is wrong\")\n              .required(\"email is must\"),\n            password: string().required(\"password is must\").min(4),\n          })}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched,\n            isValid,\n          }) => (\n            <div>\n              <form onSubmit={handleSubmit}>\n                <div className={styles.auth_signUp}>\n                  <h1 className={styles.auth_title}>Tsureru App</h1>\n                  <br />\n                  <div className={styles.auth_progress}>\n                    {isLoadingAuth && <CircularProgress />}\n                  </div>\n  \n                  <img src={logo} style={{width: \"60px\", height: \"60px\", marginLeft: \"60px\"}} />\n                  <br />\n                  <TextField\n                    placeholder=\"email\"\n                    type=\"input\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                  />\n\n                  {touched.email && errors.email ? (\n                    <div className={styles.auth_error}>{errors.email}</div>\n                  ) : null}\n                  <br />\n                 <TextField\n                    placeholder=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                  />\n                  {touched.password && errors.password ? (\n                    <div className={styles.auth_error}>{errors.password}</div>\n                  ) : null}\n                  <br />\n                  <br />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!isValid}\n                    type=\"submit\"\n                  >\n                    ログイン\n                  </Button>\n                  <br />\n                  <br />\n                  <span\n                    className={styles.auth_text}\n                    onClick={async () => {\n                      await dispatch(resetOpenSignIn());\n                      await dispatch(setOpenSignUp());\n                    }}\n                  >\n                    アカウントをお持ちではないですか?\n                  </span>\n                </div>\n              </form>\n            </div>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\n\nexport default Auth;","import React, { useState, useEffect } from \"react\";\nimport { TextField, ListItem, ListItemText } from \"@material-ui/core/\";\nimport Post from \"../post/Post\";\nimport { PROPS_POST } from \"../types\";\n\n\ninterface Props {\n  text: string;\n}\n\n\n\nconst postTitles: string[] = [\n  \n];\n\nconst ListItems: React.FC<Props> = (props) => (\n  <ListItem alignItems=\"center\" divider>\n    <ListItemText primary={props.text} />\n  </ListItem>\n);\n\nconst SearchTextField: React.FC = () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const [showLists, setShowLists] = useState(false);\n  const [filteredpostTitles, setFilteredpostTitles] = useState(postTitles);\n\n  useEffect(() => {\n    if (keyword === \"\") {\n      setFilteredpostTitles(postTitles);\n      return;\n    }\n\n    const searchKeywords = keyword\n      .trim()\n      .toLowerCase()\n      .match(/[^\\s]+/g);\n\n    //入力されたキーワードが空白のみの場合\n    if (searchKeywords === null) {\n      setFilteredpostTitles(postTitles);\n      return;\n    }\n\n    const result = postTitles.filter((postTitle) =>\n      searchKeywords.every((kw) => postTitle.toLowerCase().indexOf(kw) !== -1)\n    );\n\n    setFilteredpostTitles(result.length ? result : [\"NOT FOUND\"]);\n  }, [keyword]);\n\n  return (\n    <>\n      <TextField\n        id=\"field\"\n        color=\"secondary\"\n        variant=\"outlined\"\n        label=\"(例) 千葉県　アジ\"\n        onChange={(e) => setKeyword(e.target.value)}\n        onClick={() => setShowLists(true)}\n      />\n      {showLists &&\n        filteredpostTitles.map((v, i) => <ListItems key={i} text={v} />)}\n    </>\n  );\n};\n\nexport default SearchTextField;","import React, { useState } from \"react\";\nimport styles from \"./Post.module.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Divider, Checkbox } from \"@material-ui/core\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport { selectProfiles } from \"../auth/authSlice\";\n\nimport {\n  selectComments,\n  fetchPostStart,\n  fetchPostEnd,\n  fetchAsyncPostComment,\n  fetchAsyncPatchLiked,\n} from \"./postSlice\";\n\nimport { PROPS_POST } from \"../types\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Post: React.FC<PROPS_POST> = ({\n  postId,\n  loginId,\n  userPost,\n  title,\n  imageUrl,\n  liked,\n}) => {\n  const classes = useStyles();\n  const dispatch: AppDispatch = useDispatch();\n  const profiles = useSelector(selectProfiles);\n  const comments = useSelector(selectComments);\n  const [text, setText] = useState(\"\");\n\n  const commentsOnPost = comments.filter((com) => {\n    return com.post === postId;\n  });\n\n  const prof = profiles.filter((prof) => {\n    return prof.userProfile === userPost;\n  });\n\n  const postComment = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const packet = { text: text, post: postId };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPostComment(packet));\n    await dispatch(fetchPostEnd());\n    setText(\"\");\n  };\n\n  const handlerLiked = async () => {\n    const packet = {\n      id: postId,\n      title: title,\n      current: liked,\n      new: loginId,\n    };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncPatchLiked(packet));\n    await dispatch(fetchPostEnd());\n  };\n \n  if (title) {\n    return (\n      <div className={styles.post}>\n        <div className={styles.post_header}>\n          <Avatar className={styles.post_avatar} src={prof[0]?.img} />\n          <h3>{prof[0]?.nickName}</h3>\n        </div>\n        <img className={styles.post_image} src={imageUrl} alt=\"\" />\n\n        <h4 className={styles.post_text}>\n          <Checkbox\n            className={styles.post_checkBox}\n            icon={<FavoriteBorder />}\n            checkedIcon={<Favorite />}\n            checked={liked.some((like) => like === loginId)}\n            onChange={handlerLiked}\n          />\n          <strong> {prof[0]?.nickName}</strong> {title}\n          <AvatarGroup max={7}>\n            {liked.map((like) => (\n              <Avatar\n                className={styles.post_avatarGroup}\n                key={like}\n                src={profiles.find((prof) => prof.userProfile === like)?.img}\n              />\n            ))}\n          </AvatarGroup>\n        </h4>\n\n        <Divider />\n        <div className={styles.post_comments}>\n          {commentsOnPost.map((comment) => (\n            <div key={comment.id} className={styles.post_comment}>\n              <Avatar\n                src={\n                  profiles.find(\n                    (prof) => prof.userProfile === comment.userComment\n                  )?.img\n                }\n                className={classes.small}\n              />\n              <p>\n                <strong className={styles.post_strong}>\n                  {\n                    profiles.find(\n                      (prof) => prof.userProfile === comment.userComment\n                    )?.nickName\n                  }\n                </strong>\n                {comment.text}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        <form className={styles.post_commentBox}>\n          <input\n            className={styles.post_input}\n            type=\"text\"\n            placeholder=\"add a comment\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <button\n            disabled={!text.length}\n            className={styles.post_button}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default Post;","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport styles from \"./Core.module.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport { File } from \"../../features/types\";\n\nimport {\n  editNickname,\n  selectProfile,\n  selectOpenProfile,\n  resetOpenProfile,\n  fetchCredStart,\n  fetchCredEnd,\n  fetchAsyncUpdateProf,\n} from \"../auth/authSlice\";\n\nimport { \n  Button, \n  TextField, \n  IconButton, \n  Avatar,\n } from \"@material-ui/core\";\nimport { MdAddAPhoto } from \"react-icons/md\";\n\nconst customStyles = {\n  content: {\n    top: \"55%\",\n    left: \"50%\",\n\n    width: 350,\n    height: 500,\n    padding: \"50px\",\n\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst EditProfile: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const openProfile = useSelector(selectOpenProfile);\n  const profile = useSelector(selectProfile);\n  const [image, setImage] = useState<File | null>(null);\n\n  const updateProfile = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const packet = { id: profile.id, nickName: profile.nickName, img: image };\n\n    await dispatch(fetchCredStart());\n    await dispatch(fetchAsyncUpdateProf(packet));\n    await dispatch(fetchCredEnd());\n    await dispatch(resetOpenProfile());\n  };\n\n  const handlerEditPicture = () => {\n    const fileInput = document.getElementById(\"imageInput\");\n    fileInput?.click();\n  };\n\n  return (\n    <>\n      <div className={styles.core_modal}>\n      <Modal\n        isOpen={openProfile}\n        onRequestClose={async () => {\n          await dispatch(resetOpenProfile());\n        }}\n        style={customStyles}\n      >\n        <form className={styles.core_signUp}>\n          <h1 className={styles.core_title} style={{color : \"#696969\"}}>Tureru App</h1>\n          \n          <Avatar alt=\"who?\" src={profile.img} style={{marginLeft: \"90px\", height: \"90px\", width:\"90px\"}} />{\" \"}\n               \n          <br />\n          <TextField\n            placeholder=\"nickname\"\n            type=\"text\"\n            value={profile?.nickName}\n            onChange={(e) => dispatch(editNickname(e.target.value))}\n          />\n\n          <input\n            type=\"file\"\n            id=\"imageInput\"\n            hidden={true}\n            onChange={(e) => setImage(e.target.files![0])}\n          />\n          <br />\n          <IconButton onClick={handlerEditPicture}>\n            <MdAddAPhoto />\n          </IconButton>\n          <br />\n          <Button\n            disabled={!profile?.nickName}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={updateProfile}\n          >\n            Update\n          </Button>\n        </form>\n      </Modal>\n      </div>\n    </>\n  );\n};\n\nexport default EditProfile;\n","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\n\nimport styles from \"./Core.module.css\";\n\nimport { File } from \"../types\";\n\nimport {\n  selectOpenNewPost,\n  resetOpenNewPost,\n  fetchPostStart,\n  fetchPostEnd,\n  fetchAsyncNewPost,\n} from \"../post/postSlice\";\n\nimport { Button, TextField, IconButton } from \"@material-ui/core\";\nimport { MdAddAPhoto } from \"react-icons/md\";\nimport { GrWaypoint } from \"react-icons/gr\"\nconst customStyles = {\n  content: {\n    top: \"55%\",\n    left: \"50%\",\n    width: 350,\n    height: 500,\n    padding: \"50px\",\n　　 transform: \"translate(-50%, -50%)\",\n  },\n};\n\n　const NewPost: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const openNewPost = useSelector(selectOpenNewPost);\n\n  const [image, setImage] = useState<File | null>(null);\n  const [title, setTitle] = useState(\"\");\n  const handlerEditPicture = () => {\n    const fileInput = document.getElementById(\"imageInput\");\n    fileInput?.click();\n  };\n\n  const newPost = async (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    const packet = { title: title, img: image };\n    await dispatch(fetchPostStart());\n    await dispatch(fetchAsyncNewPost(packet));\n    await dispatch(fetchPostEnd());\n    setTitle(\"\");\n    setImage(null);\n    dispatch(resetOpenNewPost());\n  };\n\n  return (\n    <>\n     \n      <Modal\n        isOpen={openNewPost}\n        onRequestClose={async () => {\n          await dispatch(resetOpenNewPost());\n        }}\n        style={customStyles}\n      >\n        <form className={styles.core_signUp}>\n          <h1 className={styles.core_title}>tureru app</h1>\n          \n          <br />\n          <TextField\n            placeholder=\"場所、釣った魚\"\n            type=\"text\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <br />\n          <input\n            type=\"file\"\n            id=\"imageInput\"\n            hidden={true}\n            onChange={(e) => setImage(e.target.files![0])}\n          />\n          <br />\n          <IconButton onClick={handlerEditPicture}>\n            <MdAddAPhoto />\n          </IconButton>\n          <br />\n          <Button\n            disabled={!title || !image }\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={newPost}\n          >\n            釣ったぞー！！\n            <GrWaypoint />\n          </Button>\n        </form>\n      </Modal>\n     \n    </>\n  );\n};\n\nexport default NewPost;","export default __webpack_public_path__ + \"static/media/turerufav.62bfcc5f.png\";","import React, { useEffect, useState} from \"react\";\nimport Auth from \"../auth/Auth\";\n\n\n\nimport styles from \"./Core.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Grid,\n  Avatar,\n  Badge,\n  CircularProgress,\n} from \"@material-ui/core\";\n\n\nimport { MdAddAPhoto } from \"react-icons/md\";\nimport  SearchTextField  from \"./Search\";\n\nimport {\n  editNickname,\n  selectProfile,\n  selectIsLoadingAuth,\n  setOpenSignIn,\n  resetOpenSignIn,\n  setOpenSignUp,\n  resetOpenSignUp,\n  setOpenProfile,\n  resetOpenProfile,\n  fetchAsyncGetMyProf,\n  fetchAsyncGetProfs,\n  \n} from \"../auth/authSlice\";\n\nimport {\n  selectPosts,\n  selectIsLoadingPost,\n  setOpenNewPost,\n  resetOpenNewPost,\n  fetchAsyncGetPosts,\n  fetchAsyncGetComments,\n} from \"../post/postSlice\";\n\nimport Post from \"../post/Post\";\nimport EditProfile from \"./EditProfile\";\nimport NewPost from \"./NewPost\";\nimport logo from \"./images/tureruapplogo2.png\";\nimport fav from \"./images/turerufav.png\";\nimport { PROPS_POST } from \"../types\";\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#44b700\",\n    color: \"blue\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"$ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nconst Core: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const profile = useSelector(selectProfile);\n  const posts = useSelector(selectPosts);\n  const isLoadingPost = useSelector(selectIsLoadingPost);\n  const isLoadingAuth = useSelector(selectIsLoadingAuth);\n\n  useEffect(() => {\n    const fetchBootLoader = async () => {\n      if (localStorage.localJWT) {\n        dispatch(resetOpenSignIn());\n        const result = await dispatch(fetchAsyncGetMyProf());\n        if (fetchAsyncGetMyProf.rejected.match(result)) {\n          dispatch(setOpenSignIn());\n          return null;\n        }\n        await dispatch(fetchAsyncGetPosts());\n        await dispatch(fetchAsyncGetProfs());\n        await dispatch(fetchAsyncGetComments());\n      }\n    };\n    fetchBootLoader();\n  }, [dispatch]);  \n\n  const [searchText, setSearchText] = useState([]); \n  const onChangeSearchText = (e: any) => {\n    setSearchText(e.target.value);\n  };\n\n\n      \n   \n\n  \n  return (\n    <div className={styles.core_content}>\n      <Auth />\n      <EditProfile />\n      <NewPost />\n      <div className={styles.core_header}>\n     \n      <div className=\"headerImg\">\n    </div>\n      <img src={fav} style={{width: \"100px\", height: \"100px\", marginBottom:\"2px\", marginLeft:\"1px\"}} />\n      <img src={logo} style={{width: \"50px\", height: \"50px\" }} />\n        <h1 className={styles.core_title}\n         style={{ color: \"#000011\", fontSize: \"40px\", marginLeft: \"50px\" }}>Tureru App</h1>\n        {profile?.nickName ? (\n          <>\n            <button\n              className={styles.core_btnModal}\n              onClick={() => {\n                dispatch(setOpenNewPost());\n                dispatch(resetOpenProfile());\n              }}\n            >\n            < MdAddAPhoto />\n            </button>\n            <div className={styles.core_logout}>\n              {(isLoadingPost || isLoadingAuth) && <CircularProgress />}\n        \n              <Button\n                onClick={() => {\n                  localStorage.removeItem(\"localJWT\");\n                  dispatch(editNickname(\"\"));\n                  dispatch(resetOpenProfile());\n                  dispatch(resetOpenNewPost());\n                  dispatch(setOpenSignIn());\n                }}\n                style={{ color: \"#000011\",fontSize: \"20px\" , fontWeight: \"bold\"}}\n              >\n                Logout\n              </Button>\n              <button\n                className={styles.core_btnModal}\n                onClick={() => {\n                  dispatch(setOpenProfile());\n                  dispatch(resetOpenNewPost());\n                }}\n              >\n                <StyledBadge\n                  overlap=\"circle\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  variant=\"dot\"\n                >\n                  <Avatar alt=\"who?\" src={profile.img} />{\" \"}\n                </StyledBadge>\n              </button>\n            </div>\n          </>\n        ) : (\n\n          <div>\n            <Button\n              onClick={() => {\n                dispatch(setOpenSignIn());\n                dispatch(resetOpenSignUp());\n              }}\n            >\n              LogIn\n            </Button>\n            <Button\n              onClick={() => {\n                dispatch(setOpenSignUp());\n                dispatch(resetOpenSignIn());\n              }}\n            >\n              SignUp\n            </Button>\n          </div>\n        )}\n\n      </div>\n      <div className=\"home\">\n        <div className=\"Homebg\"></div>\n       <div style={{fontSize: \"25px\", color: \"#696969\", textAlign: \"center\"}}>\n         リアルタイムでなにが釣れているのか確認しよう！\n         <br />\n        <SearchTextField />\n       </div>\n\n      </div>\n      \n      {profile?.nickName && (\n        <>\n          <div className={styles.core_posts}>\n            <Grid container spacing={4}>\n              {posts\n                .slice(0)\n                .reverse()\n                .map((post) => (\n                  <Grid key={post.id} item xs={12} md={4}>\n                    <Post\n                      postId={post.id}\n                      title={post.title}\n                      loginId={profile.userProfile}\n                      userPost={post.userPost}\n                      imageUrl={post.img}\n                      liked={post.liked}\n                    />\n                  </Grid>\n                ))}\n            </Grid>\n          </div>\n        </>\n\n       \n        \n      )}\n    </div>\n  );\n};\n\nexport default Core;","import React from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport styles from \"./App.module.css\";\nimport Core from \"../src/features/core/Core\";\n\nfunction App() {\n  return (\n    \n    <div className={styles.app}>\n      <ChakraProvider>\n    \n      <Core />\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default App;","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\n\nimport authReducer from \"../features/auth/authSlice\";\nimport postReducer from \"../features/post/postSlice\";\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    post: postReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport type AppDispatch = typeof store.dispatch;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_title\":\"Auth_auth_title__3IiVY\",\"auth_error\":\"Auth_auth_error__35GYZ\",\"auth_signUp\":\"Auth_auth_signUp__23bGX\",\"auth_headerImage\":\"Auth_auth_headerImage__kIVLc\",\"auth_text\":\"Auth_auth_text__1NS5E\",\"auth_progress\":\"Auth_auth_progress__2Lo8w\"};"],"sourceRoot":""}